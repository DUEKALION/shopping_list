{"version":3,"file":"static/js/921.b590030f.chunk.js","mappings":"yIAEMA,E,MAASC,GAAAA,OAAH,2PAcZ,O,+DCbMC,EAAgBD,EAAAA,GAAAA,IAAH,yHAObE,EAAQF,EAAAA,GAAAA,GAAH,iKAWLG,GAAeH,EAAAA,EAAAA,IAAOD,EAAAA,EAAPC,CAAH,4CAgBlB,IAZA,YAAsD,IAApCI,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,MAA2B,IAApBC,SAAAA,OAAoB,SACnD,OACE,UAACL,EAAD,WACGG,IAAU,SAACD,EAAD,CAAcI,QAASH,EAAvB,wBACX,SAACF,EAAD,UAAQG,IACPC,IACC,SAACH,EAAD,CAAcI,QAASD,EAAvB,6B,8HC7BFE,EAAkBR,EAAAA,GAAAA,IAAH,gHAOfS,EAAQT,EAAAA,GAAAA,MAAH,qFAMLU,EAAQV,EAAAA,GAAAA,MAAH,0JAgCX,I,IAAA,EAvBA,YAOI,IANFW,EAMC,EANDA,GACAC,EAKC,EALDA,MAKC,IAJDC,KAAAA,OAIC,MAJM,OAIN,MAHDC,YAAAA,OAGC,MAHa,GAGb,EAFDC,EAEC,EAFDA,MACAC,EACC,EADDA,eAEA,OACE,UAACR,EAAD,YACE,SAACC,EAAD,CAAOQ,QAASN,EAAhB,SAAqBC,KACrB,SAACF,EAAD,CACEG,KAAMA,EACNK,KAAMP,EACNA,GAAIA,EACJG,YAAaA,EACbC,MAAOA,EACPI,SAAUH,Q,2BChCZI,EAAcpB,EAAAA,GAAAA,IAAH,0HAOXqB,GAAerB,EAAAA,EAAAA,IAAOD,EAAAA,EAAPC,CAAH,8DAoDlB,MA/CA,WACE,IAAIsB,GAAWC,EAAAA,EAAAA,MACPC,GAAWC,EAAAA,EAAAA,MAAXD,OAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOrB,EAAP,KAAcsB,EAAd,KAEA,GAAgCD,EAAAA,EAAAA,UAAS,IAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAEA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAGQC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,IAAvBF,QAcR,OACE,gCACGV,IAAY,SAACa,EAAA,EAAD,CAAQ/B,OAAQ,kBAAMkB,GAAU,IAAIjB,MAAK,cACtD,SAACe,EAAD,WACE,kBAAMgB,SAhBZ,SAAkBC,GAChBA,EAAEC,iBAEEjC,GAASuB,GAAYE,GACvBE,EAAQ,CACN3B,MAAAA,EAAOuB,SAAAA,EAAUE,MAAAA,EAAON,OAAAA,IAI5BF,EAAS,SAAD,OAAUE,KAOd,WACE,SAAC,EAAD,CAAUb,GAAG,QAAQC,MAAM,QAAQE,YAAY,eAAgBC,MAAOV,EACpEW,eAAgB,SAACqB,GAAD,OAAOV,EAASU,EAAEE,cAAcxB,WAClD,SAAC,EAAD,CACEJ,GAAG,WACHC,MAAM,WACNC,KAAK,SACLC,YAAY,IACZC,MAAOa,EAAUZ,eAAgB,SAACqB,GAAD,OAAOR,EAAYQ,EAAEE,cAAcxB,WAEtE,SAAC,EAAD,CAAUJ,GAAG,QAAQC,MAAM,QAAQC,KAAK,SAASC,YAAY,OAAOC,MAAOe,EAAOd,eAAgB,SAACqB,GAAD,OAAON,EAASM,EAAEE,cAAcxB,WAClI,SAACM,EAAD","sources":["components/Button/Button.js","components/NavBar/NavBar.js","components/FormItem/FormItem.js","pages/ListForm.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: orange;\n  color: white;\n  padding: 10px;\n  line-height: 2;\n  border-radius: 5px;\n  border: 0;\n  font-size: inherit;\n  cursor: pointer;\n`;\n\nexport default Button;\n","import styled from 'styled-components';\nimport Button from '../Button/Button';\n\nconst NavBarWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background: navajowhite;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  flex-basis: 60%;\n  &:first-child {\n    margin-left: 20%;\n  }\n  &:last-child {\n    margin-right: 20%;\n  }\n`;\n\nconst NavBarButton = styled(Button)`\n  margin: 10px 5%;\n`;\n\nfunction NavBar({ goBack, title, openForm = false }) {\n  return (\n    <NavBarWrapper>\n      {goBack && <NavBarButton onClick={goBack}>{`< Go Back`}</NavBarButton>}\n      <Title>{title}</Title>\n      {openForm && (\n        <NavBarButton onClick={openForm}>{`+ Add Item`}</NavBarButton>\n      )}\n    </NavBarWrapper>\n  );\n}\n\nexport default NavBar;\n","import styled from 'styled-components';\n\nconst FormItemWrapper = styled.div`\n  display: flex;\n  text-align: left;\n  flex-direction: column;\n  margin-bottom: 2%;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: bold;\n  padding: 10px 0;\n`;\n\nconst Input = styled.input`\n  flex-basis: 60%;\n  border: 0;\n  font-size: inherit;\n  border-radius: 5px;\n  padding: 10px;\n  border: 1px solid lightGrey;\n`;\n\nfunction FormItem({\n  id,\n  label,\n  type = 'text',\n  placeholder = '',\n  value,\n  handleOnChange,\n}) {\n  return (\n    <FormItemWrapper>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        type={type}\n        name={id}\n        id={id}\n        placeholder={placeholder}\n        value={value}\n        onChange={handleOnChange}\n      />\n    </FormItemWrapper>\n  );\n}\n\nexport default FormItem;\n","import styled from 'styled-components';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport NavBar from '../components/NavBar/NavBar';\nimport FormItem from '../components/FormItem/FormItem';\nimport Button from '../components/Button/Button';\n\nimport {useState, useContext} from 'react';\nimport ItemsContext from '../context/ItemsContext';\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin: 2% 5%;\n`;\n\nconst SubmitButton = styled(Button)`\n  background: blue;\n  margin: 2% 0;\n`;\n\nfunction ListForm() {\n  let navigate = useNavigate();\n  const { listId } = useParams();\n\n  const [title, setTitle] = useState('');\n\n  const [quantity, setQuantity] = useState('');\n\n  const [price, setPrice] = useState('')\n\n\n  const { addItem } = useContext(ItemsContext);\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    if (title && quantity && price) {\n      addItem({\n        title, quantity, price, listId\n      });\n    }\n\n    navigate(`/list/${listId}`);\n  }\n\n  return (\n    <>\n      {navigate && <NavBar goBack={() => navigate(-1)} title={`Add Item`} />}\n      <FormWrapper>\n        <form onSubmit={onSubmit}>\n          <FormItem id='title' label='Title' placeholder='Insert title'  value={title}\n            handleOnChange={(e) => setTitle(e.currentTarget.value)} />\n          <FormItem\n            id='quantity'\n            label='Quantity'\n            type='number'\n            placeholder='0'\n            value={quantity} handleOnChange={(e) => setQuantity(e.currentTarget.value)}\n          />\n          <FormItem id='price' label='Price' type='number' placeholder='0.00' value={price} handleOnChange={(e) => setPrice(e.currentTarget.value)}/>\n          <SubmitButton>Add Item</SubmitButton>\n        </form>\n      </FormWrapper>\n    </>\n  );\n}\n\nexport default ListForm;\n"],"names":["Button","styled","NavBarWrapper","Title","NavBarButton","goBack","title","openForm","onClick","FormItemWrapper","Label","Input","id","label","type","placeholder","value","handleOnChange","htmlFor","name","onChange","FormWrapper","SubmitButton","navigate","useNavigate","listId","useParams","useState","setTitle","quantity","setQuantity","price","setPrice","addItem","useContext","ItemsContext","NavBar","onSubmit","e","preventDefault","currentTarget"],"sourceRoot":""}