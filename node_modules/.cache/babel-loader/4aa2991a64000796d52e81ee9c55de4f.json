{"ast":null,"code":"var _jsxFileName = \"/home/oniact/Documents/shopping_list/src/context/ItemsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useState, useCallback } from \"react\"; // import useDataFetching from \"../hooks/useDataFetching\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  loading: true,\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_ITEMS_SUCCESS':\n      return { ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case 'GET_ITEMS_ERROR':\n      return { ...state,\n        items: [],\n        loading: false,\n        error: action.payload\n      };\n\n    case 'ADD_ITEM_SUCCESS':\n      return { ...state,\n        items: [...state.items, action.payload],\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst addItem = useCallback(async _ref => {\n  let {\n    listId,\n    title,\n    quantity,\n    price\n  } = _ref;\n  const itemId = Math.floor(Math.random() * 100);\n\n  try {\n    const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/items`, {\n      method: 'POST',\n      body: JSON.stringify({\n        id: itemId,\n        listId,\n        title,\n        quantity,\n        price\n      })\n    });\n    const result = await data.json();\n\n    if (result) {\n      dispatch({\n        type: 'ADD_ITEM_SUCCESS',\n        payload: {\n          id: itemId,\n          listId,\n          title,\n          quantity,\n          price\n        }\n      });\n    }\n  } catch {}\n}, []);\nexport const ItemsContextProvider = _ref2 => {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n  // const [loading, setLoading] = useState(true);\n  // const [items, setItems] = useState([]);\n  // const [error, setError] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchItems = useCallback(async listId => {\n    try {\n      const data = await fetch(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n      const result = await data.json();\n\n      if (result) {\n        // setItems(result);\n        // setLoading(false);\n        dispatch({\n          type: 'GET_ITEMS_SUCCESS',\n          payload: result\n        });\n      }\n    } catch (e) {\n      // setLoading(false);\n      // setError(e.message);\n      dispatch({\n        type: 'GET_ITEMS_ERROR',\n        payload: e.message\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n    value: { ...state,\n      fetchItems,\n      add\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemsContextProvider, \"T+rq8e/aYz0KSn5t5mzC+CzdTXQ=\");\n\n_c = ItemsContextProvider;\nexport default ItemsContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsContextProvider\");","map":{"version":3,"sources":["/home/oniact/Documents/shopping_list/src/context/ItemsContext.js"],"names":["createContext","useReducer","useState","useCallback","ItemsContext","initialState","items","loading","error","reducer","state","action","type","payload","addItem","listId","title","quantity","price","itemId","Math","floor","random","data","fetch","method","body","JSON","stringify","id","result","json","dispatch","ItemsContextProvider","children","fetchItems","e","message","add"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useState, useCallback} from \"react\";\n\n// import useDataFetching from \"../hooks/useDataFetching\";\n\nexport const ItemsContext = createContext();\n\nconst initialState = {\n    \n    items: [],\n    loading: true,\n    error: '',\n};\n\n\nconst reducer = (state, action) => {\n\n    switch(action.type) {\n\n        case 'GET_ITEMS_SUCCESS':\n            return {\n                ...state,\n                items: action.payload,\n                loading: false,\n            };\n\n        case 'GET_ITEMS_ERROR':\n            return {\n                ...state,\n                items: [],\n                loading: false,\n                error: action.payload,\n            };\n\n        case 'ADD_ITEM_SUCCESS':\n            return {\n                ...state,\n                items: [...state.items, action.payload],\n                loading: false,\n            };\n\n        default:\n            return state;\n    }\n}\n\nconst addItem = useCallback(async ({ listId, title, quantity, price}) => {\n\n    const itemId = Math.floor(Math.random() * 100);\n\n    try {\n        const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/items`, \n        {\n            method: 'POST',\n            body: JSON.stringify({\n                id: itemId,\n                listId,\n                title,\n                quantity,\n                price\n            }),\n        },\n        );\n\n        const result = await data.json();\n\n        if (result) {\n            dispatch({\n                type: 'ADD_ITEM_SUCCESS',\n                payload: {\n                    id: itemId,\n                    listId,\n                    title,\n                    quantity,\n                    price\n                },\n            });\n        }\n    } catch {}\n}, [])\n\nexport const ItemsContextProvider = ({ children }) => {\n\n    // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n\n    // const [loading, setLoading] = useState(true);\n\n    // const [items, setItems] = useState([]);\n\n    // const [error, setError] = useState('');\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const fetchItems = useCallback( async (listId) => {\n\n        try {\n\n            const data = await fetch(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n\n            const result = await data.json();\n\n            if (result) {\n                // setItems(result);\n                // setLoading(false);\n\n                dispatch({ type: 'GET_ITEMS_SUCCESS', payload: result});\n            }\n        } catch (e) {\n\n            // setLoading(false);\n            // setError(e.message);\n\n            dispatch({ type: 'GET_ITEMS_ERROR', payload: e.message});\n        }\n    }, []);\n\n    return (\n\n        <ItemsContext.Provider value={{ ...state, fetchItems, add }}>\n            {children}\n        </ItemsContext.Provider>\n    );\n\n};\n\nexport default ItemsContext;"]},"metadata":{},"sourceType":"module"}