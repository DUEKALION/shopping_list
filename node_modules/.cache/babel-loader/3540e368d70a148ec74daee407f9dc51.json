{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useDataFetching(dataSource) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetch(dataSource);\n        const result = await data.json();\n\n        if (result) {\n          setData(result);\n          setLoading(false);\n        }\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n\n    fetchData();\n  }, [dataSource]);\n  return [loading, error, data];\n}\n\n_s(useDataFetching, \"Tumsxb/9RMxMlWmUtgDdAHWLnsI=\");\n\nexport default useDataFetching;","map":{"version":3,"sources":["/home/oniact/Documents/shopping_list/src/hooks/useDataFetching.js"],"names":["useState","useEffect","useDataFetching","dataSource","loading","setLoading","data","setData","error","setError","fetchData","fetch","result","json","e","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,eAAT,CAAyBC,UAAzB,EAAqC;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeS,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMJ,IAAI,GAAG,MAAMK,KAAK,CAACR,UAAD,CAAxB;AACA,cAAMS,MAAM,GAAG,MAAMN,IAAI,CAACO,IAAL,EAArB;;AAEA,YAAID,MAAJ,EAAY;AACVL,UAAAA,OAAO,CAACK,MAAD,CAAP;AACAP,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,OARD,CAQE,OAAOS,CAAP,EAAU;AACVT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,QAAQ,CAACK,CAAC,CAACC,OAAH,CAAR;AACD;AACF;;AAEDL,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAACP,UAAD,CAjBM,CAAT;AAmBA,SAAO,CAACC,OAAD,EAAUI,KAAV,EAAiBF,IAAjB,CAAP;AACD;;GAzBQJ,e;;AA2BT,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useDataFetching(dataSource) {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetch(dataSource);\n        const result = await data.json();\n\n        if (result) {\n          setData(result);\n          setLoading(false);\n        }\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n      }\n    }\n\n    fetchData();\n  }, [dataSource]);\n\n  return [loading, error, data];\n}\n\nexport default useDataFetching;\n"]},"metadata":{},"sourceType":"module"}