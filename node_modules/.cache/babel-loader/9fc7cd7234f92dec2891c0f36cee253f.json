{"ast":null,"code":"var _jsxFileName = \"/home/oniact/Documents/shopping_list/src/context/ListsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useReducer } from \"react\";\nimport useDataFetching from \"../hooks/useDataFetching\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  lists: [],\n  loading: true,\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_LISTS_SUCCESS':\n      return { ...state,\n        lists: action.payload\n      };\n  }\n};\n\nexport const ListsContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n  return /*#__PURE__*/_jsxDEV(ListsContext.Provider, {\n    value: {\n      lists: data,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListsContextProvider, \"L9XLEgVfs5CruSrdfkXB2DYy1LY=\", false, function () {\n  return [useDataFetching];\n});\n\n_c = ListsContextProvider;\nexport default ListsContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListsContextProvider\");","map":{"version":3,"sources":["/home/oniact/Documents/shopping_list/src/context/ListsContext.js"],"names":["createContext","useCallback","useReducer","useDataFetching","ListsContext","initialState","lists","loading","error","reducer","state","action","type","payload","ListsContextProvider","children","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAGP,MAAMK,YAAY,GAAG;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,mBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;AAHR;AASH,CAXD;;AAaA,OAAO,MAAMC,oBAAoB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEhD,QAAM,CAACR,OAAD,EAAUC,KAAV,EAAiBQ,IAAjB,IAAyBb,eAAe,CAAC,wFAAD,CAA9C;AAEA,sBAEI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEU,IAAT;AAAeT,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,KAA9B;AAAA,cACKO;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CAXM;;GAAMD,oB;UAEsBX,e;;;KAFtBW,oB;AAab,eAAeV,YAAf","sourcesContent":["import { createContext, useCallback, useReducer } from \"react\";\n\nimport useDataFetching from \"../hooks/useDataFetching\";\n\nexport const ListsContext = createContext();\n\n\nconst initialState = {\n\n    lists: [],\n    loading: true,\n    error: '',\n};\n\nconst reducer = (state, action) => {\n\n    switch(action.type) {\n\n        case 'GET_LISTS_SUCCESS':\n            return {\n                ...state,\n                lists: action.payload,\n                \n            }\n    }\n}\n\nexport const ListsContextProvider = ({children}) => {\n\n    const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n\n    return(\n\n        <ListsContext.Provider value={{ lists: data, loading, error }}>\n            {children}\n        </ListsContext.Provider>\n\n    );\n};\n\nexport default ListsContext; "]},"metadata":{},"sourceType":"module"}