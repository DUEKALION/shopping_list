{"ast":null,"code":"var _jsxFileName = \"/home/oniact/Documents/shopping_list/src/context/ItemsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useCallback, useState } from \"react\"; // import useDataFetching from \"../hooks/useDataFetching\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemsContext = /*#__PURE__*/createContext();\nexport const ItemsContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState('');\n  const fetchItems = useCallback(async listId => {\n    try {\n      const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n      const result = await data.json();\n\n      if (result) {\n        setItems(result);\n        setLoading(false);\n      }\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n    value: {\n      items,\n      loading,\n      error,\n      fetchItems\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemsContextProvider, \"baCBxYxFublH8tcr8sa5TnUzVE8=\");\n\n_c = ItemsContextProvider;\nexport default ItemsContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsContextProvider\");","map":{"version":3,"sources":["/home/oniact/Documents/shopping_list/src/context/ItemsContext.js"],"names":["createContext","useCallback","useState","ItemsContext","ItemsContextProvider","children","loading","setLoading","items","setItems","error","setError","fetchItems","listId","data","fetch","result","json","e","message"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,OAArD,C,CAEA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAElD;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,UAAU,GAAGX,WAAW,CAAE,MAAOY,MAAP,IAAkB;AAE9C,QAAI;AAEA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,0FAAyFF,MAAO,QAAlG,CAAxB;AAEA,YAAMG,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;;AAEA,UAAID,MAAJ,EAAY;AACRP,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD,CAUE,OAAOW,CAAP,EAAU;AAERX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,QAAQ,CAACO,CAAC,CAACC,OAAH,CAAR;AACH;AACJ,GAjB6B,EAiB3B,EAjB2B,CAA9B;AAmBA,sBAEI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEX,MAAAA,KAAF;AAASF,MAAAA,OAAT;AAAkBI,MAAAA,KAAlB;AAAyBE,MAAAA;AAAzB,KAA9B;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CApCM;;GAAMD,oB;;KAAAA,oB;AAsCb,eAAeD,YAAf","sourcesContent":["import { createContext, useCallback, useState } from \"react\";\n\n// import useDataFetching from \"../hooks/useDataFetching\";\n\nexport const ItemsContext = createContext();\n\nexport const ItemsContextProvider = ({ children }) => {\n\n    // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n\n    const [loading, setLoading] = useState(true);\n\n    const [items, setItems] = useState([]);\n\n    const [error, setError] = useState('');\n\n    const fetchItems = useCallback( async (listId) => {\n\n        try {\n\n            const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n\n            const result = await data.json();\n\n            if (result) {\n                setItems(result);\n                setLoading(false)\n            }\n        } catch (e) {\n\n            setLoading(false);\n            setError(e.message);\n        }\n    }, []);\n\n    return (\n\n        <ItemsContext.Provider value={{ items, loading, error, fetchItems }}>\n            {children}\n        </ItemsContext.Provider>\n    );\n\n};\n\nexport default ItemsContext;"]},"metadata":{},"sourceType":"module"}