{"ast":null,"code":"var _jsxFileName = \"/home/oniact/Documents/shopping_list/src/context/ItemsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useState, useCallback } from \"react\"; // import useDataFetching from \"../hooks/useDataFetching\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemsContext = /*#__PURE__*/createContext();\nconst initialState = {\n  items: [],\n  loading: true,\n  error: ''\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'GET_ITEMS_SUCCESS':\n      return { ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case 'GET_ITEMS_ERROR':\n      return { ...state,\n        items: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ItemsContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n  // const [loading, setLoading] = useState(true);\n  // const [items, setItems] = useState([]);\n  // const [error, setError] = useState('');\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchItems = useCallback(async listId => {\n    try {\n      const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n      const result = await data.json();\n\n      if (result) {\n        setItems(result);\n        setLoading(false);\n      }\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n    value: { ...state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemsContextProvider, \"T+rq8e/aYz0KSn5t5mzC+CzdTXQ=\");\n\n_c = ItemsContextProvider;\nexport default ItemsContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsContextProvider\");","map":{"version":3,"sources":["/home/oniact/Documents/shopping_list/src/context/ItemsContext.js"],"names":["createContext","useReducer","useState","useCallback","ItemsContext","initialState","items","loading","error","reducer","state","action","type","payload","ItemsContextProvider","children","dispatch","fetchItems","listId","data","fetch","result","json","setItems","setLoading","e","setError","message"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,WAA9C,QAAgE,OAAhE,C,CAEA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEP,MAAMK,YAAY,GAAG;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,mBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFX;AAGHN,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAK,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHJ,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJX,OAAP;;AAOJ;AACI,aAAOH,KAAP;AAlBR;AAoBH,CAtBD;;AAwBA,OAAO,MAAMI,oBAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAElD;AAEA;AAEA;AAEA;AAEA,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBf,UAAU,CAACQ,OAAD,EAAUJ,YAAV,CAApC;AAEA,QAAMY,UAAU,GAAGd,WAAW,CAAE,MAAOe,MAAP,IAAkB;AAE9C,QAAI;AAEA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,0FAAyFF,MAAO,QAAlG,CAAxB;AAEA,YAAMG,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;;AAEA,UAAID,MAAJ,EAAY;AACRE,QAAAA,QAAQ,CAACF,MAAD,CAAR;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD,CAUE,OAAOC,CAAP,EAAU;AAERD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,CAAC,CAACE,OAAH,CAAR;AACH;AACJ,GAjB6B,EAiB3B,EAjB2B,CAA9B;AAmBA,sBAEI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,EAAE,GAAGjB;AAAL,KAA9B;AAAA,cACKK;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAOH,CAtCM;;GAAMD,oB;;KAAAA,oB;AAwCb,eAAeV,YAAf","sourcesContent":["import { createContext, useReducer, useState, useCallback} from \"react\";\n\n// import useDataFetching from \"../hooks/useDataFetching\";\n\nexport const ItemsContext = createContext();\n\nconst initialState = {\n    \n    items: [],\n    loading: true,\n    error: '',\n};\n\n\nconst reducer = (state, action) => {\n\n    switch(action.type) {\n\n        case 'GET_ITEMS_SUCCESS':\n            return {\n                ...state,\n                items: action.payload,\n                loading: false,\n            };\n\n        case 'GET_ITEMS_ERROR':\n            return {\n                ...state,\n                items: [],\n                loading: false,\n                error: action.payload,\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const ItemsContextProvider = ({ children }) => {\n\n    // const [loading, error, data] = useDataFetching('https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists');\n\n    // const [loading, setLoading] = useState(true);\n\n    // const [items, setItems] = useState([]);\n\n    // const [error, setError] = useState('');\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const fetchItems = useCallback( async (listId) => {\n\n        try {\n\n            const data = await fetch(`https://my-json-server.typicode.com/PackPublishing/React-Projects-Second-Edition/lists/${listId}/items`);\n\n            const result = await data.json();\n\n            if (result) {\n                setItems(result);\n                setLoading(false)\n            }\n        } catch (e) {\n\n            setLoading(false);\n            setError(e.message);\n        }\n    }, []);\n\n    return (\n\n        <ItemsContext.Provider value={{ ...state,  }}>\n            {children}\n        </ItemsContext.Provider>\n    );\n\n};\n\nexport default ItemsContext;"]},"metadata":{},"sourceType":"module"}